(()=>{"use strict";class t{constructor(t){this.text=t,this.id=0,this.pinned=!1}setId(t){this.id=t}}new class{constructor(){this.tasksDiv=document.querySelector(".tasks"),this.form=document.querySelector(".tasks-form"),this.formInput=document.querySelector(".tasks-form__input"),this.formInputEmpty=document.querySelector(".tasks-form__error"),this.tasksPinnedBlock=document.querySelector(".tasks-pinned"),this.tasksPinnedList=document.querySelector(".tasks-pinned__list"),this.tasksPinnedListEmpty=document.querySelector(".tasks-pinned__empty"),this.tasksAllBlock=document.querySelector(".tasks-all"),this.tasksAllList=document.querySelector(".tasks-all__list"),this.tasksAllListEmpty=document.querySelector(".tasks-all__empty"),this.arrTasks=[],this.init()}init(){this.form.addEventListener("submit",this.submitForm.bind(this)),this.formInput.addEventListener("input",(()=>this.buildTasksAllList(this.containsText()))),this.tasksDiv.addEventListener("click",this.taskPinned.bind(this))}submitForm(s){s.preventDefault();const i=this.formInput.value.trim();if(i){const s=new t(i);s.setId(this.arrTasks.length),this.arrTasks.push(s),this.buildTasksAllList(this.arrTasks),this.formInput.value="",this.formInputEmpty.classList.add("no-display")}else this.formInputEmpty.classList.remove("no-display")}buildTasksAllList(t){this.tasksAllList.innerHTML="",t.forEach((t=>{!1===t.pinned&&this.addTask(t)})),this.tasksListEmptyCheck(this.tasksAllList,this.tasksAllListEmpty)}tasksListEmptyCheck(t,s){t.children.length>0?s.classList.add("no-display"):s.classList.remove("no-display")}addTask(t){const s=document.createElement("li");s.className="tasks-item",s.dataset.id=t.id;const i=document.createElement("span");i.classList.add("tasks-item__text"),i.innerText=t.text;const e=document.createElement("input");e.type="checkbox",e.classList="tasks-item__attach",s.append(i),s.append(e),this.tasksAllList.append(s)}containsText(){const t=this.formInput.value.trim().toLowerCase();return this.arrTasks.filter((s=>s.text.toLowerCase().startsWith(t)))}taskPinned(t){const s=t.target.closest("input.tasks-item__attach");if(!s)return;const i=s.closest("li"),e=i.dataset.id;!1===this.arrTasks[e].pinned?(this.arrTasks[e].pinned=!0,this.tasksPinnedList.append(i)):(this.arrTasks[e].pinned=!1,this.tasksAllList.append(i)),this.tasksListEmptyCheck(this.tasksAllList,this.tasksAllListEmpty),this.tasksListEmptyCheck(this.tasksPinnedList,this.tasksPinnedListEmpty)}}})();